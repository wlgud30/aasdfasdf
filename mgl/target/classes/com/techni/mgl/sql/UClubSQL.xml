<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mgl.UClub">
	<resultMap type="com.techni.mgl.domain.UClubVO" id="uClubVO">
		<result column="MGL_UCLUB_IDX" property="uc_idx"/>
		<result column="MGL_CLUB_IDX" property="c_idx"/>
		<result column="MGL_USER_ID" property="u_id"/>
		<result column="MGL_USER_nm" property="u_nm"/>
		<result column="MGL_UCLUB_GRADE_CD" property="u_club_gd"/>
		<result column="MGL_UCLUB_MNG" property="uc_mng"/>
		<result column="MGL_CLUB_IDX" property="c_idx"/>
		<result column="MGL_CLUB_NM" property="c_nm"/>
		<result column="MGL_CLUB_LOCATION" property="c_location"/>
		<result column="MGL_CLUB_INFO" property="c_info"/>
		<result column="MGL_USER_PHOTO" property="u_photo"/>
		<result column="MGL_UCLUB_MNG" property="uc_mng"/>
		<result column="MGL_USER_TEL" property="u_tel"/>
		<result column="MGL_USER_JOINDATE" property="u_join_date"/>
		<result column="MGL_UCLUB_INDAT" property="u_c_indat"/>
		<result column="MGL_USER_EMAIL" property="u_email"/>
		<result column="MGL_USER_TSIZE" property="u_tsize"/>
		<result column="MGL_USER_BIRTH" property="u_birth"/>
		<result column="MGL_ATTEND_STATUS" property="u_status"/>
		<result column="MGL_CLUB_COURT_SA" property="c_court_sa"/>
		<result column="MGL_CLUB_COURT_SU" property="c_court_su"/>
		<result column="MGL_CSTADIUM_NM" property="cst_nm"/>
		<result column="MGL_USER_SEX" property="u_sex"/>
		<result column="MGL_CLUB_PHOTO" property="c_photo"/>
		<result column="MGL_USER_PUSHID" property="u_push"/>
		<result column="MGL_PUSH_DATE" property="push_date"/>
		<result column="MGL_PUSH_URL" property="push_url"/>
		<result column="MGL_PUSH_MENT" property="push_ment"/>
		<result column="MGL_PUSH_SEND" property="push_send"/>
	</resultMap>
	
	<resultMap type="com.techni.mgl.domain.ClubVO" id="clubVO">
		<result column="MGL_CLUB_IDX" property="c_idx"/>
		<result column="MGL_CLUB_NM" property="c_nm"/>
		<result column="MGL_CLUB_LOCATION" property="c_location"/>
		<result column="MGL_CLUB_INFO" property="c_info"/>
	</resultMap>

	<sql id="uClubFiled">
		MGL_USER_ID AS m_id
	</sql>


	<!-- 사용자 클럽들을 가지고 온다.(밑에것은 아이디를 조건으로 두지않음) -->
	<select id="uClubList" resultMap="uClubVO">
		SELECT * 
			FROM 
				(SELECT * 
					FROM MGL_CLUB
				) A, 
				(SELECT MGL_CLUB_IDX 
					FROM MGL_UCLUB 
						WHERE MGL_USER_ID=#{m_id} 
						AND MGL_UCLUB_MNG != "가입대기" 
						AND MGL_UCLUB_MNG != "탈퇴"
				) B ,
				(SELECT COUNT(mgl_user_id) as cu_cnt,mgl_club_idx
					FROM MGL_UCLUB  
						WHERE MGL_UCLUB_MNG != "가입대기" 
						AND MGL_UCLUB_MNG != "탈퇴"
							group by mgl_club_idx
				) C 
				WHERE A.MGL_CLUB_IDX = B.MGL_CLUB_IDX 
				AND A.MGL_CLUB_IDX=C.MGL_CLUB_IDX
				AND MGL_CLUB_YN = "Y"
	</select>
	
	<!-- 키워드로 클럽을 찾는다 -->
	<select id = "UClubSearch" resultMap="uClubVO">
				SELECT * 
					FROM MGL_CLUB
				 A JOIN
				(SELECT COUNT(mgl_user_id) as cu_cnt,mgl_club_idx
					FROM MGL_UCLUB 
						WHERE MGL_UCLUB_MNG != "가입대기" 
						AND MGL_UCLUB_MNG != "탈퇴" 
						group by mgl_club_idx
				) C 
				USING(MGL_CLUB_IDX)
				WHERE
					MGL_CLUB_YN = "Y" 
				AND
					MGL_CLUB_NM 
					LIKE concat('%',#{keyword},'%')
				OR MGL_CLUB_LOCATION
					LIKE concat('%',#{keyword},'%') GROUP BY mgl_CLUB_IDX;
	
	</select>
	<!-- 매니저가 클럽생성 -->
	<insert id="insert">
		INSERT INTO 
				MGL_UCLUB VALUES(
						concat("CI",cast(date_format(now(),"%Y%m%d") as char(8)),LPAD((SELECT * FROM(SELECT max(MGL_UCLUB_SEQ) FROM MGL_SEQ) NEXT),4,0)),
						(SELECT max(mgl_club_idx) FROM MGL_CLUB) ,
						#{u_id},
						(SELECT concat(left(left(now(),4)-left(MGL_USER_BIRTH,4)+1,1),"0대") FROM MGL_USER WHERE MGL_USER_ID = #{u_id}),
						#{u_club_gd},
						"매니저",
						sysdate(),
						NULL
				)
	</insert>
	<!-- 유저가 클럽가입 -->
	<insert id="user_insert">
		INSERT INTO
			MGL_UCLUB VALUES(
				concat("CI",cast(date_format(now(),"%Y%m%d") as char(8)),LPAD((SELECT * FROM(SELECT max(MGL_UCLUB_SEQ) FROM MGL_SEQ) NEXT),4,0)),
				#{c_idx},
				#{u_id},
				(SELECT concat(left(left(now(),4)-left(MGL_USER_BIRTH,4)+1,1),"0대") FROM MGL_USER WHERE MGL_USER_ID = #{u_id}),
				#{u_club_gd},
				"가입대기",
				sysdate(),
				null
			);
	</insert>
	<!-- 클럽 시퀀스 -->
	<update id="c_seq">
		update mgl_seq set mgl_club_seq = mgl_club_seq+1
	</update>
	<!-- 유저 클럽 시퀀스 -->
	<update id="uc_seq">
		update mgl_seq set mgl_uclub_seq = mgl_uclub_seq+1
	</update>
	<!-- 가입여부 판단 -->
	<select id="selectYN" resultType="int">
		SELECT COUNT(MGL_USER_ID) 
			FROM MGL_UCLUB 
				WHERE MGL_USER_ID = #{u_id} 
				AND MGL_CLUB_IDX = #{c_idx}
				AND MGL_UCLUB_MNG != "탈퇴"
	</select>
	<!-- 클럽내의 이달 랭킹 리스트 -->
	<select id="selectUClubUser" resultMap="uClubVO">
		select 
		 	e.uc_joinYN,e.mgl_club_nm,e.uc_mngYN,e.mgl_club_idx,ja.* 
		from	
			(
				SELECT 
					COUNT(case when mgl_uclub_mng="가입대기" then 1 end) as uc_joinYN,mgl_club_nm,mgl_club_idx,count(case when mgl_user_id = #{u_id} and mgl_uclub_mng="매니저" then 1 end) as uc_mngYN 
				FROM 
					MGL_UCLUB 
				join 
					mgl_club 
				using
					(mgl_club_idx)
				WHERE 
					mgl_club_idx=#{c_idx}
			) E left join				
			(		
				SELECT 
					a.mgl_uclub_grade_cd,A.MGL_CLUB_IDX,A.MGL_UCLUB_MNG,left(now(),4)-left(MGL_USER_BIRTH,4)+1 as u_age,MGL_USER_NM,MGL_USER_PHOTO,sum(case when MID(MGL_CLUB_MATCH_IDX,2,4)=#{ym} AND B.MGL_CLUB_IDX = #{c_idx} then MGL_CLUB_MATCH_APTN end)as cm_p_total,A.MGL_USER_ID 
				FROM 
					MGL_Uclub A 
				INNER JOIN 
					MGL_USER C
				USING
					(MGL_USER_ID)
				left JOIN 
					MGL_CLUB_MATCH B 
				on a.mgl_user_id = b.mgl_user_id,
				(
					SELECT 
						MGL_CLUB_NM 
					FROM 
						MGL_CLUB 
					WHERE 
						MGL_CLUB_IDX = #{c_idx}
				) D
				where 
					a.mgl_club_idx =#{c_idx}
				AND 
					MGL_UCLUB_MNG != "가입대기" 
				AND 
					MGL_UCLUB_MNG != "탈퇴"
				GROUP BY A.MGL_USER_ID
				)	 ja
				on e.mgl_club_idx = ja.mgl_club_idx
				order by cm_p_total is null ASC,field(ja.mgl_uclub_grade_cd,"S","A","B","C","D","초심","왕초","무급"),ja.cm_p_total desc	
</select>
	<!-- 클럽내의 이달 랭킹 유저(남) 리스트 -->
	<select id="selectUClubM" resultMap="uClubVO">
		SELECT sum(case when MID(MGL_CLUB_MATCH_IDX,2,4)=#{ym}  AND D.MGL_CLUB_IDX = #{c_idx} then MGL_CLUB_MATCH_APTN end)as cm_p_total,A.mgl_club_idx , b.mgl_user_id , left(now(),4)-left(MGL_USER_BIRTH,4)+1 as u_age,b.mgl_user_nm,b.mgl_user_photo,a.MGL_UCLUB_GRADE_CD
			FROM MGL_UCLUB A 
			INNER JOIN MGL_USER B 
				USING(MGL_USER_ID)
			LEFT JOIN MGL_CLUB_MATCH d 
				ON A.MGL_USER_ID=d.MGL_USER_ID 
					WHERE a.MGL_CLUB_IDX =#{c_idx}
					AND MGL_UCLUB_MNG !="가입대기" 
					AND MGL_UCLUB_MNG !="탈퇴" 
					AND MGL_USER_SEX = "M"
					<!-- AND D.MGL_CLUB_IDX=#{c_idx} -->
					group by a.mgl_user_id
					order by sum(case when MID(MGL_CLUB_MATCH_IDX,2,4)=#{ym}  AND D.MGL_CLUB_IDX = #{c_idx} then MGL_CLUB_MATCH_APTN end) is null ASC,
							field(A.mgl_uclub_grade_cd,"S","A","B","C","D","초심","왕초","무급"), cm_p_total desc
	</select>
	<!-- 클럽내의 이달 랭킹 유저(여) 리스트 -->
	<select id="selectUClubF" resultMap="uClubVO">
		SELECT sum(case when MID(MGL_CLUB_MATCH_IDX,2,4)=#{ym}  AND D.MGL_CLUB_IDX = #{c_idx} then MGL_CLUB_MATCH_APTN end)as cm_p_total,A.mgl_club_idx , b.mgl_user_id , left(now(),4)-left(MGL_USER_BIRTH,4)+1 as u_age,b.mgl_user_nm,b.mgl_user_photo,a.MGL_UCLUB_GRADE_CD
			FROM MGL_UCLUB A 
			INNER JOIN MGL_USER B 
				USING(MGL_USER_ID)
			LEFT JOIN MGL_CLUB_MATCH d 
				ON A.MGL_USER_ID=d.MGL_USER_ID 
					WHERE a.MGL_CLUB_IDX =#{c_idx}
					AND MGL_UCLUB_MNG !="가입대기" 
					AND MGL_UCLUB_MNG != "탈퇴" 
					AND MGL_USER_SEX = "F"
					<!-- AND D.MGL_CLUB_IDX=#{c_idx} -->
					group by a.mgl_user_id
					order by sum(case when MID(MGL_CLUB_MATCH_IDX,2,4)=#{ym}  AND D.MGL_CLUB_IDX = #{c_idx} then MGL_CLUB_MATCH_APTN end) is null ASC,
							field(A.mgl_uclub_grade_cd,"S","A","B","C","D","초심","왕초","무급"), cm_p_total desc
	</select>
	<!-- 매니저가 보는 유저 리스트 화면 -->
	<select id="UClubMList" resultMap="uClubVO">
		SELECT a.mgl_uclub_grade_cd,D.C_COUNT,c.mgl_club_nm,A.mgl_club_idx , b.mgl_user_id , left(now(),4)-left(MGL_USER_BIRTH,4)+1 as u_age,b.mgl_user_nm,MGL_UCLUB_MNG,MGL_USER_TEL,cast(date_format(MGL_USER_JOINDATE,"%Y-%m-%d") as char(10)) as u_join_date
			FROM MGL_CLUB C INNER JOIN MGL_UCLUB A USING(MGL_CLUB_IDX) 
			INNER JOIN MGL_USER B 
				USING(MGL_USER_ID), (SELECT MGL_UCLUB_GRADE_CD,COUNT(MGL_USER_ID) AS c_count FROM MGL_UCLUB WHERE MGL_CLUB_IDX=#{c_idx} AND  MGL_UCLUB_MNG != "가입대기") D
					WHERE MGL_CLUB_IDX = #{c_idx}
					AND MGL_UCLUB_MNG !="가입대기"
					AND MGL_UCLUB_MNG !="탈퇴"
					AND MGL_UCLUB_MNG !="탈퇴대기"
					ORDER BY field (MGL_UCLUB_MNG,"매니저","회장","부회장","고문","감사","총무","재무","경기이사","관리이사","홍보이사","회원"),MGL_USER_JOINDATE
	</select>
	<!-- 매니저가 보는 가입대기 리스트 화면 -->
	<select id="UClubJoinWaitList" resultMap="uClubVO">
		SELECT b.mgl_uclub_grade_cd,c.mgl_club_nm,A.mgl_club_idx , b.mgl_user_id , left(now(),4)-left(MGL_USER_BIRTH,4)+1 as u_age,b.mgl_user_nm,MGL_UCLUB_MNG,MGL_USER_TEL,cast(date_format(MGL_USER_JOINDATE,"%Y-%m-%d") as char(10)) as u_join_date
			FROM MGL_CLUB C INNER JOIN MGL_UCLUB A USING(MGL_CLUB_IDX) 
			INNER JOIN MGL_USER B 
				USING(MGL_USER_ID) 
					WHERE MGL_CLUB_IDX = #{c_idx} 
					AND MGL_UCLUB_MNG = "가입대기"
	</select>
	<!-- 매니저가 보는 탈퇴대기 리스트 화면 -->
	<select id="UClubOutWaitList" resultMap="uClubVO">
		SELECT b.mgl_uclub_grade_cd,c.mgl_club_nm,A.mgl_club_idx , b.mgl_user_id , left(now(),4)-left(MGL_USER_BIRTH,4)+1 as u_age,b.mgl_user_nm,MGL_UCLUB_MNG,MGL_USER_TEL,cast(date_format(MGL_USER_JOINDATE,"%Y-%m-%d") as char(10)) as u_join_date
			FROM MGL_CLUB C INNER JOIN MGL_UCLUB A USING(MGL_CLUB_IDX) 
			INNER JOIN MGL_USER B 
				USING(MGL_USER_ID) 
					WHERE MGL_CLUB_IDX = #{c_idx} 
					AND MGL_UCLUB_MNG = "탈퇴대기"
	</select>
	<!-- 매니저가 보는 가입대기 디테일 화면 -->
	<select id = "UClubJoinWaitDetail" resultMap="uClubVO"> 
		select 
			* 
		from		
		(
			select 
				count(case when mgl_uclub_mng = "회장" and mgl_club_idx = #{c_idx} then 1 end) as c_cnt
			from 
				mgl_uclub
		)	ja,
		(SELECT
			MGL_CLUB_NM,
			MGL_CLUB_IDX,
			cast(date_format(MGL_USER_JOINDATE,"%Y-%m-%d") as char(10)) as u_join_date,
			A.MGL_USER_ID,
			MGL_USER_TEL,
			MGL_USER_EMAIL,
			MGL_USER_TSIZE,
			MGL_UCLUB_GRADE_CD,
			MGL_USER_BIRTH,
			MGL_USER_NM,
			MGL_USER_PUSHID
				FROM MGL_USER A,
				MGL_CLUB B
				WHERE A.MGL_USER_ID = #{u_id}
				AND B.MGL_CLUB_IDX = #{c_idx}
				) jb
	</select>
	<!-- 가입 승인 -->
	<update id="cJoinOK">
		UPDATE MGL_UCLUB 
			SET MGL_UCLUB_MNG =#{uc_mng}
			WHERE MGL_USER_ID = #{u_id} 
			AND MGL_CLUB_IDX = #{c_idx}
	</update>
	<!-- 가입 거절 -->
	<delete id="cJoinNO">
		DELETE FROM MGL_UCLUB
		WHERE MGL_USER_ID = #{u_id}
		AND MGL_CLUB_IDX = #{c_idx}
	</delete>
	
	<!-- 클럽별로 오늘 출석하지않은 회원들을 보여준다. -->
	<select id="attend" resultMap="uClubVO">
			SELECT b.mgl_uclub_grade_cd,left(now(),4)-left(MGL_USER_BIRTH,4)+1 as u_age,A.MGL_USER_ID,A.MGL_USER_NM,A.MGL_USER_PHOTO,c.MGL_CLUB_NM,c.c_count
			FROM MGL_USER A 
			INNER JOIN MGL_UCLUB B USING(MGL_USER_ID), 
			(SELECT MGL_CLUB_NM , COUNT(MGL_USER_ID) AS c_count
				FROM MGL_CLUB D 
				INNER JOIN MGL_UCLUB E USING(MGL_CLUB_IDX) 
					WHERE MGL_CLUB_IDX=  #{c_idx}
					AND MGL_UCLUB_MNG != "가입대기" 
					AND MGL_UCLUB_MNG != "탈퇴") C 
			WHERE MGL_UCLUB_MNG != "가입대기"
			AND MGL_UCLUB_MNG != "탈퇴"
		 	AND MGL_CLUB_IDX =  #{c_idx} 
		 	AND MGL_USER_ID != ALL(SELECT MGL_USER_ID
		 											FROM MGL_UATTEND 
		 												WHERE RIGHT(MGL_UATTEND_IDX,8) = cast(date_format(now(),"%Y%m%d")AS CHAR(8)) 
		 												 AND LEFT(MGL_UATTEND_IDX,13)=#{c_idx}
														 AND MGL_ATTEND_YN = "Y")

	</select>
	<!-- 클럽별로 오늘 출석한 회원들을 보여준다. -->
	<select id= "attendY" resultMap="uClubVO">
	SELECT b.mgl_uclub_grade_cd,left(now(),4)-left(MGL_USER_BIRTH,4)+1 as u_age,A.MGL_USER_NM,A.MGL_USER_PHOTO,C.MGL_USER_ID,C.*,d.c_count
		FROM MGL_USER A 
		INNER JOIN MGL_UCLUB B USING(MGL_USER_ID),
		(SELECT COUNT(MGL_USER_ID) AS c_count from mgl_uclub where mgl_club_idx=#{c_idx} and mgl_uclub_mng != "가입대기" and mgl_uclub_mng !="탈퇴") d,
		(SELECT MGL_UATTEND_IDX,MGL_ATTEND_YN,MGL_USER_ID,MGL_ATTEND_STATUS FROM MGL_UATTEND WHERE LEFT(MGL_UATTEND_IDX,13)=#{c_idx}) C
			WHERE B.MGL_CLUB_IDX =#{c_idx}
			AND MGL_UCLUB_MNG !="가입대기"
			AND MGL_UCLUB_MNG !="탈퇴"
			AND C.MGL_USER_ID = A.MGL_USER_ID
			AND RIGHT(MGL_UATTEND_IDX,8) = cast(date_format(now(),"%Y%m%d")AS CHAR(8)) 
			AND MGL_ATTEND_YN = "Y"
			GROUP BY C.MGL_USER_ID
	</select>
	<!-- 개인출석등록 -->
	<insert id="attendInsert">
		INSERT INTO MGL_UATTEND VALUES(
				concat(#{c_idx},#{u_id},cast(date_format(now(),"%Y%m%d")AS CHAR(8))),
				#{c_idx},
				#{u_id},
				"Y",
				SYSDATE(),
				NULL,
				"게임가능"
															)
				ON DUPLICATE KEY UPDATE MGL_ATTEND_STATUS = "게임가능";
		
	</insert>
	<!-- 개인 퇴실 -->
	<update id="attendOut">
		UPDATE MGL_UATTEND 
			SET 
				MGL_ATTEND_STATUS = "퇴실",
				MGL_ATTEND_EDATE = SYSDATE()
			WHERE MGL_USER_ID = #{u_id} 
			AND MGL_CLUB_IDX = #{c_idx} 
			AND RIGHT(MGL_UATTEND_IDX,8) = cast(date_format(now(),"%Y%m%d")AS CHAR(8))
	</update>
	<!-- 다중 출석등록 -->
	<insert id="multiAttend">
		INSERT INTO MGL_UATTEND VALUES
		<foreach collection="list" item="item" separator=",">
		(
				concat(#{c_idx},#{item.u_id},cast(date_format(now(),"%Y%m%d")AS CHAR(8))),
				#{c_idx},
				#{item.u_id},
				"Y",
				SYSDATE(),
				NULL,
				"게임가능"
		)
		</foreach>
	</insert>
	<!-- 현재 게임등록이 가능한 리스트 -->
	<select id="gameOKList" resultMap="uClubVO">
	SELECT * FROM		
	(
	SELECT 
		MGL_CLUB_NM,MGL_CLUB_IDX 
	FROM 
		MGL_CLUB 
	WHERE 
		MGL_CLUB_IDX = #{c_idx}
	) JA LEFT JOIN			
	(	
		SELECT 
			left(now(),4)-left(MGL_USER_BIRTH,4)+1 as u_age,A.MGL_USER_ID ,A.MGL_USER_PUSHID,A.MGL_USER_NM , A.MGL_USER_PHOTO , A.MGL_USER_SEX, D.MGL_CLUB_IDX , D.MGL_UCLUB_GRADE_CD
				FROM MGL_USER A 
				INNER JOIN (SELECT * FROM MGL_UCLUB WHERE MGL_CLUB_IDX = #{c_idx}) D USING(MGL_USER_ID)
				INNER JOIN  (select * from MGL_UATTEND where RIGHT(MGL_UATTEND_IDX,8) = cast(date_format(now(),"%Y%m%d")AS 
CHAR(8)) AND MGL_CLUB_IDX = #{c_idx} AND 
						MGL_ATTEND_STATUS != "퇴실") B USING(MGL_USER_ID) 
					WHERE 
						MGL_ATTEND_YN = "Y"
					or 
						MGL_ATTEND_STATUS = "게임가능"
					or 
						MGL_ATTEND_STATUS = "게임중"
					AND 
						MGL_UCLUB_MNG != "가입대기"
					AND 
						MGL_UCLUB_MNG != "탈퇴"
					GROUP BY A.MGL_USER_ID
					ORDER BY field(MGL_ATTEND_STATUS,"게임중","게임가능")
	)	JB
		ON JA.MGL_CLUB_IDX = JB.MGL_CLUB_IDX
	</select>
	
	<!-- 클럽유저 리스트 -->	
	<select id="clubUserList" resultMap="uClubVO">
		SELECT 
			left(now(),4)-left(MGL_USER_BIRTH,4)+1 as u_age,MGL_USER_ID,MGL_USER_NM,B.MGL_UCLUB_GRADE_CD,MGL_USER_PHOTO,MGL_USER_TEL,MGL_UCLUB_MNG,MGL_CLUB_NM	
		FROM 
			MGL_USER A
		INNER JOIN 
			MGL_UCLUB B
		USING(MGL_USER_ID)
		INNER JOIN 
			MGL_CLUB C
		USING(MGL_CLUB_IDX)
		WHERE 
			B.MGL_CLUB_IDX = #{c_idx}
		AND 
			MGL_UCLUB_MNG != "가입대기"
		AND 
			MGL_UCLUB_MNG != "탈퇴"
	</select>
	<!-- 비교 -->
	<select id="meAndYou" resultMap="uClubVO">
	SELECT
		* 
	FROM
		(
			SELECT MGL_CLUB_NM FROM MGL_CLUB WHERE MGL_CLUB_IDX =#{c_idx}
		) JA
		LEFT JOIN
		(
			SELECT
				my_t_p.*,you_t_p.*,count(case when my.mgl_club_match_win = "승" then 1 end)as my_win,count(case when my.mgl_club_match_win = "패" then 1 end)as my_lose,sum(my.mgl_club_match_aptn)as my_ap,sum(you.mgl_club_match_aptn)as you_ap,sum(my.mgl_club_match_pptn)as my_pp,sum(you.mgl_club_match_pptn)as you_pp,sum(my.mgl_club_match_cnt_gap)as my_gap,sum(you.mgl_club_match_cnt_gap)as you_gap,MGL_CLUB_NM,my_id,my_nm,my_gd,my_gr,you_id,you_nm,you_gd,you_gr from
				(
					SELECT 
						SUM(MGL_CLUB_MATCH_APTN)as my_cm_p_total,SUM(case when MID(MGL_CLUB_MATCH_IDX,2,4) =  #{ym} then MGL_CLUB_MATCH_APTN end) as my_cm_p_total_m FROM MGL_CLUB_MATCH 
					WHERE 
						MGL_CLUB_IDX=#{c_idx}
					AND 
						MGL_USER_ID = #{my_id}
				) as my_t_p,
				(
					SELECT 
						SUM(MGL_CLUB_MATCH_APTN)as you_cm_p_total,SUM(case when MID(MGL_CLUB_MATCH_IDX,2,4) =  #{ym} then MGL_CLUB_MATCH_APTN end) as you_cm_p_total_m FROM MGL_CLUB_MATCH 
					WHERE
						MGL_CLUB_IDX=#{c_idx}
					AND 
						MGL_USER_ID = #{you_id}
				) as you_t_p,
				(
					SELECT 
						MGL_CLUB_NM,left(now(),4)-left(MGL_USER_BIRTH,4)+1 as my_age,a.MGL_USER_ID as my_id,MGL_USER_NM as my_nm,D.MGL_UCLUB_GRADE_CD as my_gd,MGL_CLUB_MATCH_IDX,MGL_CLUB_GIDX,MGL_CLUB_TEAM_AB,MGL_CLUB_MATCH_UEFFORT as my_gr,MGL_CLUB_MATCH_CNT_GAP,MGL_CLUB_MATCH_WIN,MGL_CLUB_MATCH_PPTN,MGL_CLUB_MATCH_APTN
					FROM 
						MGL_USER	A
					INNER JOIN 
						MGL_CLUB_MATCH B
					USING 
						(MGL_USER_ID)
					INNER JOIN
						MGL_CLUB C
					USING 
						(MGL_CLUB_IDX)
					INNER JOIN
						MGL_UCLUB D
					USING 
						(MGL_CLUB_IDX)
					WHERE
						MGL_CLUB_MATCH_UEFFORT is not null 
					And
						b.MGL_USER_ID = #{my_id}
					AND
						MGL_CLUB_IDX = #{c_idx}
					AND
						D.MGL_USER_ID = #{my_id}
					group by 
						b.mgl_club_match_idx
				) as my,
						
				(
					SELECT 
						left(now(),4)-left(MGL_USER_BIRTH,4)+1 as you_age,a.MGL_USER_ID as you_id,MGL_USER_NM as you_nm,D.MGL_UCLUB_GRADE_CD as you_gd,MGL_CLUB_MATCH_IDX,MGL_CLUB_GIDX,MGL_CLUB_TEAM_AB,MGL_CLUB_MATCH_UEFFORT as you_gr,MGL_CLUB_MATCH_CNT_GAP,MGL_CLUB_MATCH_WIN,MGL_CLUB_MATCH_PPTN,MGL_CLUB_MATCH_APTN
					FROM 
						MGL_USER	A
					INNER JOIN 
						MGL_CLUB_MATCH B
					USING 
						(MGL_USER_ID)
					INNER JOIN
						MGL_CLUB C
					USING 
						(MGL_CLUB_IDX)
					INNER JOIN
						MGL_UCLUB D
					USING 
						(MGL_CLUB_IDX)
					WHERE
						MGL_CLUB_MATCH_UEFFORT is not null 
					And 
						a.MGL_USER_ID = #{you_id}
					AND
						D.MGL_USER_ID = #{you_id}
					AND
						MGL_CLUB_IDX = #{c_idx}
					group by b.mgl_club_match_idx 
				) as you
		
				where 
					my.mgl_club_gidx = you.mgl_club_gidx
				AND 
					my.mgl_club_team_ab != you.mgl_club_team_ab
				AND 
					MID(MY.MGL_CLUB_MATCH_IDX,2,4) =  #{ym}
				AND 
					MID(you.mgl_club_match_idx,2,4) = #{ym}
			)	JB	
			ON 
				JA.MGL_CLUB_NM = JB.MGL_CLUB_NM	
	</select>
	<!-- 클럽업데이트 -->
	<update id="clubUpdate">
		UPDATE 
			MGL_CLUB 
		SET 
			MGL_CLUB_NM = #{c_nm}, 
			MGL_CLUB_INFO = #{c_info},
			MGL_CSTADIUM_NM = #{cst_nm},
			MGL_CLUB_LOCATION = #{c_location},
			MGL_CLUB_COURT_SA = #{c_court_sa},
			MGL_CLUB_COURT_SU = #{c_court_su},
			MGL_CLUB_PHOTO = #{c_photo}
		WHERE 
			MGL_CLUB_IDX = #{c_idx}
	</update>
	<!-- 유저 업데이트 -->
	<update id="userUpdat">
		UPDATE
			MGL_USER A , MGL_UCLUB B
		SET
			A.MGL_USER_TEL = #{u_tel},
			A.MGL_USER_EMAIL = #{u_email},
			A.MGL_USER_TSIZE = #{u_tsize},
			A.MGL_USER_PHOTO = #{u_photo},
			A.MGL_USER_PW = #{u_pw},
			B.MGL_UCLUB_GRADE_CD =#{u_club_gd}
		WHERE
			B.MGL_USER_ID = A.MGL_USER_ID
		AND
			B.MGL_USER_ID = #{u_id}
		AND
			B.MGL_CLUB_IDX = #{c_idx}
	</update>
	<!-- 매니저 양도 -->
	<update id="manUpdate">
		UPDATE MGL_UCLUB a , mgl_UCLUB b
		SET a.MGL_UCLUB_MNG = b.mgl_UCLUB_MNG,
		B.MGL_UCLUB_MNG = A.MGL_UCLUB_MNG,
		B.MGL_UCLUB_GRADE_CD = #{u_club_gd}
		WHERE A.MGL_CLUB_IDX = #{c_idx}
		AND B.MGL_CLUB_IDX = #{c_idx}
		AND A.MGL_USER_ID = #{m_id}
		AND B.MGL_USER_ID = #{u_id}
	</update>
	<update id="manCUpdate">
		UPDATE MGL_CLUB
		SET MGL_USER_MID = #{u_id}
		WHERE MGL_CLUB_IDX = #{c_idx}
	</update>
	<select id="gameCount" resultMap="uClubVO">
		SELECT 
			sum(case when MGL_CLUB_IDX = #{c_idx} then MGL_CLUB_MATCH_APTN end)as cm_p_total,
			COUNT(*) as c_gameC,MID(MGL_CLUB_MATCH_IDX,2,4) AS c_mm
		FROM 
			MGL_CLUB_MATCH 
		WHERE 
			MGL_USER_ID = #{u_id}
		AND 
			MGL_CLUB_IDX = #{c_idx}
		AND 
			MID(MGL_CLUB_MATCH_IDX,2,2) = date_format(now(),"%y")
		GROUP BY c_mm
	</select>
	<!-- 클럽사용자 탈퇴 -->
	<update id="clubOut">
		UPDATE 
			MGL_UCLUB 
		SET 
			MGL_UCLUB_MNG = #{u_mng}
		WHERE 
			MGL_CLUB_IDX = #{c_idx}
		AND 
			MGL_USER_ID = #{u_id}
	</update>
	<!-- 사용자 클럽들을 가지고 온다-->
	<select id="getUClubList" resultType="cVO" parameterType="String">
		SELECT
			T.*,
				(SELECT COUNT(DISTINCT mgl_user_id) 
					FROM MGL_UCLUB
					WHERE MGL_UCLUB.MGL_CLUB_IDX = t.c_idx) as cu_cnt
		FROM (
			SELECT
				A.MGL_UCLUB_IDX as uc_idx, 
				B.MGL_CLUB_IDX as c_idx,
				B.MGL_CLUB_NM as c_nm,
				B.MGL_CLUB_LOCATION as c_location,
				B.MGL_CLUB_INFO as c_info
		FROM MGL_UCLUB A
		RIGHT JOIN MGL_CLUB B
		ON A.MGL_USER_ID = #{id}
		AND 
		B.MGL_CLUB_IDX = A.MGL_CLUB_IDX
		) T
	</select>
	
	<!-- 사용자 단일 클럽정보를 가지고 온다 -->
	<select id="getUClubDetaill" resultType="ucvDTO" parameterType="map">
	 SELECT
	 T.*,
	 (	SELECT COUNT(DISTINCT mgl_user_id)
		FROM MGL_UCLUB
		WHERE MGL_UCLUB.MGL_CLUB_IDX = T.c_idx) as m_cnt
		FROM (
					SELECT
							C.MGL_CLUB_IDX AS c_idx,
							C.MGL_CLUB_NM AS c_nm,
							C.MGL_CLUB_LOCATION AS c_location,
							C.MGL_CLUB_BIRTH AS c_birth,
							C.MGL_CLUB_TIME AS c_time,
							C.MGL_CLUB_WEEK AS c_week,
							C.MGL_CLUB_INFO AS c_info,
							UC.MGL_USER_ID AS m_id,
							UC.MGL_UCLUB_GRADE_CD AS uc_gcd
					FROM
							MGL_UCLUB UC, MGL_CLUB C
					WHERE
							C.MGL_CLUB_IDX = UC.MGL_CLUB_IDX
					AND
							C.MGL_CLUB_IDX = #{idx}
					AND
							UC.MGL_USER_ID = #{uid}
				) T
	</select>
	<!-- 개인정보 -->
	<select id="userUpdate" resultMap="uClubVO">
		SELECT sum(case when d.mgl_user_id = #{u_id} AND D.MGL_CLUB_IDX = #{c_idx} then MGL_CLUB_MATCH_APTN end)as cm_p_total,left(now(),4)-left(MGL_USER_BIRTH,4)+1 as u_age,MGL_UCLUB_MNG,MGL_CLUB_NM,date_format(MGL_UCLUB_INDAT,"%Y-%m-%d") as u_c_indat,MGL_USER_BIRTH,MGL_USER_NM,MGL_USER_TSIZE,MGL_USER_SEX,MGL_USER_TEL,MGL_USER_EMAIL,MGL_USER_PHOTO,B.MGL_UCLUB_GRADE_CD
		FROM MGL_USER A
		INNER JOIN MGL_UCLUB B USING(MGL_USER_ID)
		INNER JOIN MGL_CLUB C USING(MGL_CLUB_IDX) LEFT JOIN
		MGL_CLUB_MATCH D ON C.MGL_CLUB_IDX = D.MGL_CLUB_IDX
		WHERE A.MGL_USER_ID = #{u_id}
		AND MGL_USER_PW = #{u_pw}
		AND C.MGL_CLUB_IDX = #{c_idx}
		GROUP BY A.MGL_USER_ID
	</select>
	<!-- 유저정보 -->
	<select id = "userOne" resultMap="uClubVO">
		select 
			* 
		from		
		(
			select 
				count(case when mgl_uclub_mng = "회장" and mgl_club_idx = #{c_idx} then 1 end) as c_cnt 
			from 
				mgl_uclub
		)	ja,
	
		(	SELECT 
				MGL_UCLUB_INDAT,left(now(),4)-left(MGL_USER_BIRTH,4)+1 as u_age,mgl_user_nm,mgl_user_id,mgl_user_sex,mgl_user_tel,mgl_user_birth,mgl_user_tsize,mgl_user_email,b.mgl_uclub_grade_cd,mgl_user_photo,mgl_uclub_mng 
			FROM 
				MGL_USER a JOIN MGL_UCLUB b USING(MGL_USER_ID)
			WHERE 
				MGL_USER_ID = #{u_id}	
				AND MGL_CLUB_IDX = #{c_idx}
		) jb
		
	</select>
	<update id="userMngGd">
		update 
			mgl_uclub
		set 
			mgl_uclub_mng = #{uc_mng},
			mgl_uclub_grade_cd = #{u_club_gd}
		where 
			mgl_user_id = #{u_id}
		and 
			mgl_club_idx = #{c_idx}
	</update>
	
	<!-- 개인순위 -->
	<select id="todayRank" resultMap="uClubVO">
	SELECT * FROM
(SELECT MGL_CLUB_IDX,MGL_CLUB_NM FROM MGL_CLUB WHERE MGL_CLUB_IDX = #{c_idx}) JA LEFT JOIN
(
		SELECT mgl_club_idx,a.mgl_uclub_grade_Cd,mgl_user_nm,mgl_user_age as age,COUNT(case when mgl_CLUB_MATCH_WIN="승" then 1 end)as my_win,COUNT(case when mgl_CLUB_MATCH_WIN="패" then 1 end)as my_lose,SUM(MGL_CLUB_MATCH_TOTAL) AS my_pp,SUM(MGL_CLUB_MATCH_CNT_GAP)as my_gap,SUM(MGL_CLUB_MATCH_APTN)as my_ap,a.MGL_USER_ID 
		FROM MGL_CLUB_MATCH a
		left join mgl_user b
		on a.mgl_user_id = b.mgl_user_id
		WHERE MGL_CLUB_MATCH_DATE = #{cm_ymd}
		AND MGL_CLUB_IDX = #{c_idx}
		GROUP BY MGL_USER_ID
		
		 ) JB
ON JA.MGL_CLUB_IDX = JB.MGL_CLUB_IDX
ORDER BY my_win desc,my_gap desc,my_ap DESC 		
	</select>
	
	<insert id="pushInsert">
		INSERT INTO 
				MGL_PUSH VALUES(
						#{push_id},
						#{push_ment},
						#{push_url},
						DATE_FORMAT(NOW(),'%Y-%m-%d'),
						#{u_nm}
				)
	</insert>
	
	
	
	
	
	
	
	
	
	
	
	
	
</mapper>